'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactHotLoader = require('react-hot-loader');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var App = function (_Component) {
  (0, _inherits3.default)(App, _Component);

  function App(props) {
    (0, _classCallCheck3.default)(this, App);

    var _this = (0, _possibleConstructorReturn3.default)(this, (App.__proto__ || (0, _getPrototypeOf2.default)(App)).call(this, props));

    _this.state = propsToState(props);
    _this.close = null;
    return _this;
  }

  (0, _createClass3.default)(App, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var state = propsToState(nextProps);
      try {
        this.setState(state);
      } catch (err) {
        this.handleError(err);
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var router = this.props.router;


      this.close = router.subscribe(function (data) {
        var props = data.props || _this2.state.props;
        var state = propsToState((0, _extends3.default)({}, data, {
          props: props,
          router: router
        }));

        try {
          _this2.setState(state);
        } catch (err) {
          _this2.handleError(err);
        }
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.close) this.close();
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      var _props = this.props,
          router = _props.router,
          headManager = _props.headManager;

      return { router: router, headManager: headManager };
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          Component = _state.Component,
          props = _state.props;


      return _react2.default.createElement(
        _reactHotLoader.AppContainer,
        null,
        _react2.default.createElement(Component, props)
      );
    }
  }, {
    key: 'handleError',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(err) {
        var _props2, router, ErrorComponent, pathname, query, props, state;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                console.error(err);

                _props2 = this.props, router = _props2.router, ErrorComponent = _props2.ErrorComponent;
                pathname = router.pathname, query = router.query;
                _context.next = 5;
                return ErrorComponent.getInitialProps({ err: err, pathname: pathname, query: query });

              case 5:
                props = _context.sent;
                state = propsToState({ Component: ErrorComponent, props: props, router: router });


                try {
                  this.setState(state);
                } catch (err2) {
                  console.error(err2);
                }

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function handleError(_x) {
        return _ref.apply(this, arguments);
      }

      return handleError;
    }()
  }]);
  return App;
}(_react.Component);

App.childContextTypes = {
  router: _react.PropTypes.object,
  headManager: _react.PropTypes.object
};
exports.default = App;


function propsToState(props) {
  var Component = props.Component,
      router = props.router;

  var url = {
    query: router.query,
    pathname: router.pathname,
    back: function back() {
      return router.back();
    },
    push: function push(url, as) {
      return router.push(url, as);
    },
    pushTo: function pushTo(href, as) {
      (0, _utils.warn)('Warning: \'url.pushTo()\' is deprecated. Please use \'url.push()\' instead.');
      var pushRoute = as ? href : null;
      var pushUrl = as || href;

      return router.push(pushRoute, pushUrl);
    },
    replace: function replace(url, as) {
      return router.replace(url, as);
    },
    replaceTo: function replaceTo(href, as) {
      (0, _utils.warn)('Warning: \'url.replaceTo()\' is deprecated. Please use \'url.replace()\' instead.');
      var replaceRoute = as ? href : null;
      var replaceUrl = as || href;

      return router.replace(replaceRoute, replaceUrl);
    }
  };

  return {
    Component: Component,
    props: (0, _extends3.default)({}, props.props, { url: url })
  };
}